FROM fedora:32

# https://superuser.com/questions/959380/how-do-i-install-generate-all-locales-on-fedora
# This may not be necessary anymore because Fedora 30, unlike CentOS 7, has
# glibc subpackages like glibc-langpack-en.
RUN rm /etc/rpm/macros.image-language-conf
RUN echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONUNBUFFERED=0
ENV DJANGO_SETTINGS_MODULE=pulpcore.app.settings
ENV PULP_SETTINGS=/etc/pulp/settings.py

# The Fedora 30 image already has tsflags=nodocs set in dnf.conf
# It already has pip
#
# wget & git are presumably needed for purposes like pip installs from git
#
# libxcrypt-compat is needed by psycopg2-binary from PyPI
#
# python3-psycopg2 is installed by pulp_installer
#
# glibc-langpack-en is needed to provide the en_US.UTF-8 locale, which Pulp
# seems to need.
#
# python3-createrepo_c is needed for pulp_rpm
#
# openssl-devel, python3-devel, and gcc are for testing pulp-certguard
RUN		dnf -y update && \
		dnf -y install wget git && \
		dnf -y install libxcrypt-compat && \
		dnf -y install python3-psycopg2 && \
		dnf -y install glibc-langpack-en && \
		dnf -y install python3-createrepo_c && \
		dnf -y install python3-libmodulemd && \
		dnf -y install openssl-devel && \
		dnf -y install python3-devel && \
		dnf -y install gcc && \
		dnf clean all

# Need to install optional dep, rhsm, for pulp-certguard
RUN pip install rhsm

RUN mkdir -p /etc/pulp

RUN pip install gunicorn django-storages[boto3]
{% if s3_test is defined %}
# Hacking botocore (https://github.com/boto/botocore/pull/1990):
RUN sed -i "s/hasattr(body, 'read')/getattr(body, '_size', None)/g" $(pip show botocore | grep -i location | awk '{ print $2 }')/botocore/handlers.py
{% endif %}

{% if ( item.value.pulpcore is defined and
        item.value.pulpcore.startswith('./') ) %}
COPY {{ item.value.pulpcore }} /tmp/{{ item.value.pulpcore | basename }}
RUN pip install /tmp/{{ item.value.pulpcore | basename }}
RUN rm -rf /tmp/{{ item.value.pulpcore | basename }}
{% else %}
RUN pip install {{ item.value.pulpcore | default('pulpcore') }}
{% endif %}

{% if item.value.plugins is defined %}
{% for plugin in item.value.plugins %}
{% if plugin.startswith('./') %}
COPY {{ plugin }} /tmp/{{ plugin | basename }}
RUN pip install /tmp/{{ plugin | basename }}
RUN rm -rf /tmp/{{ plugin | basename }}
{% else %}
RUN pip install {{ plugin }}
{% endif %}
{% endfor %}
{% endif %}

COPY pulpcore/containers/images/pulp/container-assets/wait_on_postgres.py /usr/bin/wait_on_postgres.py
COPY pulpcore/containers/images/pulp/container-assets/wait_on_database_migrations.sh /usr/bin/wait_on_database_migrations.sh
COPY pulpcore/containers/images/pulp/container-assets/pulp-common-entrypoint.sh /pulp-common-entrypoint.sh
COPY pulpcore/containers/images/pulp/container-assets/pulp-api /usr/bin/pulp-api
COPY pulpcore/containers/images/pulp/container-assets/pulp-content /usr/bin/pulp-content
COPY pulpcore/containers/images/pulp/container-assets/pulp-resource-manager /usr/bin/pulp-resource-manager
COPY pulpcore/containers/images/pulp/container-assets/pulp-worker /usr/bin/pulp-worker

ENTRYPOINT ["/pulp-common-entrypoint.sh"]
